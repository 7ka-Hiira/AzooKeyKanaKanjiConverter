# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift Build and Test
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  macos-build:
    name: Swift ${{ matrix.swift-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        swift-version: ["5.9", "5.10"]
    steps:
    - uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ matrix.swift-version }}
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build
      run: swift build -Xswiftc -strict-concurrency=complete -Xcxx -xobjective-c++ -v
    - name: Run tests
      run: swift test -c release -Xswiftc -strict-concurrency=complete -Xcxx -xobjective-c++ -v
  ubuntu-build:
      name: Swift ${{ matrix.swift-version }} on ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest]
          swift-version: ["5.9", "5.10"]
      steps:
      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift-version }}
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build
        run: swift build -Xswiftc -strict-concurrency=complete -v
      - name: Run tests
        run: swift test -c release -Xswiftc -strict-concurrency=complete -v
  windows-build:
      name: Swift ${{ matrix.swift-version }} on ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [windows-latest]
          swift-version: ["20240802.2"]
      steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          release-tag-name: ${{ matrix.swift-version }}
          github-repo: thebrowsercompany/swift-build
          release-asset-name: installer-amd64.exe
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build
        run: swift build -Xswiftc -strict-concurrency=complete -v
      - name: Run tests
        run: swift test -c release -Xswiftc -strict-concurrency=complete -v
  
